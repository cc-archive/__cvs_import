<?
// ----------------------------
// Matthew Drake and Ian Spivey
// Mixter Website
// 6.171
// madrake@mit.edu, ispivey@mit.edu
// ----------------------------
// Page: user-input.lib
// Purpose: A library file containing functions related to validating user input.
// ----------------------------

require_once("../modules/mod-utilities/globals.lib"); 

// Pre: $input is a string
// Post: returns a modified version of $input which is safe to put in the database, and has had all html tags
//       stripped from it.
function stripAllTags($input) {
  return htmlentities(strip_tags(addslashes($input)));
}


// Note: The following function was lifted straight from the PHP forums associated with the strip_tag command.
// The code was submitted by joris878@hotmail.com with an Editor included note that this function will probably 
// be natively supported by PHP 5.0. If you are a future editor of this code and you are using PHP 5 or higher,
// check to see if this function has been released yet. 
// This routine removes all attributes from a given tag except 
// the attributes specified in the array $attr. 
function stripeentag($msg,$tag,$attr) { 
  $lengthfirst = 0; 
  while (strstr(substr($msg,$lengthfirst),"<$tag ")!="") 
  { 
    $imgstart = $lengthfirst + strpos(substr($msg,$lengthfirst), "<$tag "); 
    $partafterwith = substr($msg,$imgstart); 
    $img = substr($partafterwith,0,strpos($partafterwith,">")+1); 
    $img = str_replace(" =","=",$msg); 
    $out = "<$tag";  
    for($i=1;$i<=count($atr);$i++) 
    { 
      $val = filter($img,$attr[$i]."="," "); 
      if(strlen($val)>0) $attr[$i] = " ".$attr[$i]."=".$val; 
      else $attr[$i] = ""; 
      $out .= $attr[$i]; 
    } 
    $out .= ">"; 
    $partafter = substr($partafterwith,strpos($partafterwith,">")+1); 
    $msg = substr($msg,0,$imgstart).$out.$partafter; 
    $lengthfirst = $imgstart+3; 
  } 
  return $msg; 
} 


// Pre: $input is a string
// Post: returns a modified version of $input which is safe to put in the database, and has had harmful html tags
//       stripped from it.
function stripSomeTags($input) {
  $input = strip_tags(addslashes($input), '<b><i><a><ul><li><blockquote><img><a>');
  $input = stripeentag($input, '<a>', 'href');
  return $input;  
} 

// Pre: $input is a string which has already been made database and html friendly.
// Post: returns a modified version of $input which has had escape characters removed from it so that it will
//       display correctly as part of an html page.
function unstripTags($input) {
  return stripslashes($input);
}

// Pre: A string
// Post: Converts newline characters into line breaks.
function convertLineBreaks($input) {
  return str_replace("\n", "<BR>", $input);
}